const https = require('https');
const fs = require('fs');

// Â≤°Â±±ÁúåÂÜÖ„ÅÆ„Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„ÇíÂæπÂ∫ïË™øÊüª
async function findAnytimeInOkayama() {
    const apiKey = 'AIzaSyDVcClDuehOqCfPIRowZ07ZWrIqyNeEtL4';
    
    // „Çà„ÇäÂÖ∑‰ΩìÁöÑ„Å™Ê§úÁ¥¢„ÇØ„Ç®„É™
    const searchQueries = [
        '„Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„Çπ Â≤°Â±±Áúå',
        'Anytime Fitness Â≤°Â±±Áúå',
        '„Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„Çπ Â≤°Â±±Â∏Ç',
        'Anytime Fitness Â≤°Â±±Â∏Ç',
        '„Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„Çπ ÂÄâÊï∑Â∏Ç',
        'Anytime Fitness ÂÄâÊï∑Â∏Ç',
        '24ÊôÇÈñì„Ç∏„É† Â≤°Â±±',
        '„Éï„Ç£„ÉÉ„Éà„Éç„Çπ24 Â≤°Â±±'
    ];
    
    console.log('üîç Â≤°Â±±ÁúåÂÜÖ„ÅÆ„Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„ÇπÂæπÂ∫ïË™øÊüª„ÇíÈñãÂßã...\n');
    
    const allResults = [];
    
    for (const query of searchQueries) {
        console.log(`üîç Ê§úÁ¥¢„ÇØ„Ç®„É™: "${query}"`);
        
        try {
            // Text Search API „Çí‰ΩøÁî®
            const results = await textSearch(query, apiKey);
            
            if (results && results.length > 0) {
                console.log(`‚úÖ ${results.length}‰ª∂„ÅÆÂÄôË£ú„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü`);
                
                // „Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„ÇπÈñ¢ÈÄ£„ÅÆ„Åø„Éï„Ç£„É´„Çø„É™„É≥„Ç∞
                const anytimeResults = results.filter(place => {
                    const name = place.name.toLowerCase();
                    return name.includes('„Ç®„Éã„Çø„Ç§„É†') || 
                           name.includes('anytime') || 
                           name.includes('24ÊôÇÈñì') ||
                           (name.includes('fitness') && name.includes('24'));
                });
                
                if (anytimeResults.length > 0) {
                    console.log(`üéØ „Ç®„Éã„Çø„Ç§„É†Èñ¢ÈÄ£: ${anytimeResults.length}‰ª∂`);
                    anytimeResults.forEach(place => {
                        console.log(`   - ${place.name} (${place.address})`);
                    });
                    allResults.push(...anytimeResults);
                } else {
                    console.log(`‚ùå „Ç®„Éã„Çø„Ç§„É†Èñ¢ÈÄ£„Å™„Åó`);
                }
            } else {
                console.log(`‚ùå Ê§úÁ¥¢ÁµêÊûú„Å™„Åó`);
            }
            
            console.log(''); // Á©∫Ë°å
            
            // APIÂà∂Èôê„ÇíËÄÉÊÖÆ„Åó„Å¶ÂæÖÊ©ü
            await sleep(2000);
            
        } catch (error) {
            console.error(`‚ùå Ê§úÁ¥¢„Ç®„É©„Éº (${query}):`, error.message);
        }
    }
    
    // ÈáçË§áÈô§Âéª
    const uniqueResults = removeDuplicates(allResults);
    
    console.log(`\nüìä ÊúÄÁµÇÁµêÊûú:`);
    console.log(`- Á∑èÁô∫Ë¶ãÊï∞: ${allResults.length}‰ª∂`);
    console.log(`- ÈáçË§áÈô§ÂéªÂæå: ${uniqueResults.length}‰ª∂`);
    
    if (uniqueResults.length > 0) {
        console.log('\nüèãÔ∏è Áô∫Ë¶ã„Åó„Åü„Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„ÇπÈñ¢ÈÄ£Â∫óËàó:');
        uniqueResults.forEach((gym, index) => {
            console.log(`${index + 1}. ${gym.name}`);
            console.log(`   ‰ΩèÊâÄ: ${gym.address}`);
            console.log(`   Â∫ßÊ®ô: ${gym.latitude}, ${gym.longitude}`);
            console.log('');
        });
        
        // ÁµêÊûú„Çí„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
        const resultData = {
            timestamp: new Date().toISOString(),
            searchQueries: searchQueries,
            totalFound: allResults.length,
            uniqueResults: uniqueResults.length,
            gyms: uniqueResults
        };
        
        fs.writeFileSync('anytime-search-results.json', JSON.stringify(resultData, null, 2), 'utf8');
        console.log('‚úÖ ÁµêÊûú„Çí anytime-search-results.json „Å´‰øùÂ≠ò„Åó„Åæ„Åó„Åü');
        
    } else {
        console.log('\n‚ùå Â≤°Â±±ÁúåÂÜÖ„Å´„Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„ÅØË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü');
        console.log('üí° ÂèØËÉΩÊÄß:');
        console.log('   1. Â≤°Â±±Áúå„Å´„ÅØ„Ç®„Éã„Çø„Ç§„É†„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„ÅÆÂ∫óËàó„Åå„Å™„ÅÑ');
        console.log('   2. Âà•„ÅÆÂêçÁß∞„ÅßÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Çã');
        console.log('   3. Ê§úÁ¥¢ÁØÑÂõ≤Â§ñ„ÅÆÂ†¥ÊâÄ„Å´„ÅÇ„Çã');
    }
    
    return uniqueResults;
}

// Text Search API
function textSearch(query, apiKey) {
    return new Promise((resolve, reject) => {
        const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(query)}&region=jp&language=ja&key=${apiKey}`;
        
        https.get(url, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                try {
                    const result = JSON.parse(data);
                    if (result.status === 'OK') {
                        const gyms = result.results.map(place => ({
                            name: place.name,
                            address: place.formatted_address || '',
                            latitude: place.geometry.location.lat,
                            longitude: place.geometry.location.lng,
                            rating: place.rating || '',
                            userRatingsTotal: place.user_ratings_total || '',
                            placeId: place.place_id,
                            businessStatus: place.business_status || 'OPERATIONAL'
                        }));
                        resolve(gyms);
                    } else {
                        console.log(`APIÂøúÁ≠î: ${result.status}`);
                        resolve([]);
                    }
                } catch (error) {
                    reject(error);
                }
            });
        }).on('error', reject);
    });
}

// ÈáçË§áÈô§Âéª
function removeDuplicates(gyms) {
    const unique = [];
    const seen = new Set();
    
    for (const gym of gyms) {
        const key = `${gym.name}-${gym.latitude}-${gym.longitude}`;
        if (!seen.has(key)) {
            seen.add(key);
            unique.push(gym);
        }
    }
    
    return unique;
}

// ÂæÖÊ©üÈñ¢Êï∞
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

// ÂÆüË°å
if (require.main === module) {
    findAnytimeInOkayama()
        .then(results => {
            console.log('\nüéâ Ë™øÊüªÂÆå‰∫ÜÔºÅ');
        })
        .catch(error => {
            console.error('‚ùå „Ç®„É©„Éº:', error);
        });
}
